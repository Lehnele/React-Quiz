{"version":3,"sources":["components/Navigation/MenuToggle/MenuToggle.module.css","components/Navigation/Drawer/Drawer.module.css","components/UI/Backdrop/Backdrop.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","containers/Auth/Auth.module.css","components/UI/Input/input.module.css","hoc/Layout/Layout.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","components/UI/Select/Select.js","form/formFramework.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","components/Logout/Logout.js","App.js","reportWebVitals.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","close","Drawer","links","to","label","isAuthenticated","map","link","index","key","onClose","renderLinks","connect","state","auth","token","useState","menu","setState","Layout","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","result","reduce","total","quiz","quizItem","length","onRetry","Loader","center","axios","create","baseURL","fetchQuizSuccess","fetchQuizzesSuccess","quizzes","fetchQuizzesError","e","error","quizSetState","answerState","results","isFinished","activeQuestion","loading","dispatch","fetchQuizById","quizId","a","get","response","data","quizAnswerClick","answerId","getState","rightAnswerId","timeout","window","setTimeout","isQuizFinished","number","clearTimeout","retryQuiz","useParams","useEffect","Quiz","QuizWrapper","fetchQuizzes","forEach","name","QuizList","Input","inputType","htmlFor","Math","random","icon","value","onChange","valid","touched","shouldValidate","isInvalid","alert_warning","errorMessage","logout","localStorage","removeItem","autoLogout","time","authSuccess","authError","email","password","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","isFormValid","formControls","validation","required","minLength","onChangeHandler","event","controlName","control","target","isValid","trim","is","validateControl","Auth","onSubmit","preventDefault","AuthForm","Select","options","option","createControl","config","validateForm","hasOwnProperty","createOptionControl","createFormControls","option1","option2","option3","option4","createQuizQuestion","item","finishCreateQuiz","select","QuizCreator","validate","changeHandler","questionItem","path","element","replace","autoLogin","getItem","routes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12e4c595.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__OLoE2\",\"open\":\"MenuToggle_open__14SWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__2BlOY\",\"close\":\"Drawer_close__1Cl1X\",\"active\":\"Drawer_active__35KPu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\",\"close\":\"Backdrop_close__1glC4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__18Rwf\",\"QuizWrapper\":\"Quiz_QuizWrapper__c8INT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__Dpsgu\",\"Question\":\"ActiveQuiz_Question__18iOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3PJVi\",\"success\":\"AnswerItem_success__30eEE\",\"error\":\"AnswerItem_error___hrWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__D-CkC\",\"success\":\"FinishedQuiz_success__jBBc5\",\"error\":\"FinishedQuiz_error__KSdom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"error\":\"Button_error__2nDvg\",\"success\":\"Button_success__cnhtV\",\"primary\":\"Button_primary__28VL_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__ANdA0\",\"lds-ring\":\"Loader_lds-ring__2NevF\",\"center\":\"Loader_center__Iyafz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\",\"AuthForm\":\"Auth_AuthForm__3wyhV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__3BPgK\",\"alert_warning\":\"input_alert_warning__1yfZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__EwYQd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__a5VQi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__3jBmX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2qylT\"};","import React from 'react';\nimport classes from './MenuToggle.module.css';\n\nconst MenuToggle = props => {\n    const cls = [\n        classes.MenuToggle,\n        'fa',\n    ]\n\n    if(props.isOpen) {\n        cls.push('fa-times')\n        cls.push(classes.open)\n    } else {\n        cls.push('fa-bars')\n    }\n\n    return (\n        <i\n            className={cls.join(' ')}\n            onClick={props.onToggle}\n        />\n    );\n}\n\nexport default MenuToggle;","import React from 'react';\nimport classes from './Backdrop.module.css';\n\n\nconst Backdrop = props => {\n\n        const cls = [classes.Backdrop]\n        if(props.isOpen) {\n                cls.push(classes.close)\n        }\n\n        return (\n            <div\n                className={cls.join(' ')}\n                onClick={props.onClick}\n            />\n        )\n}\n\n\n\nexport default Backdrop;","import React from 'react';\nimport classes from './Drawer.module.css';\nimport { NavLink } from 'react-router-dom';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nconst Drawer = (props) => {\n    function renderLinks(links) {\n        return links.map((link, index) => {\n            return (\n                <li key={index}>\n                    <NavLink\n                        to={link.to}\n                        // className={classes.active}\n                        onClick={props.onClose}\n                    >\n                        {link.label}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    const cls = [classes.Drawer]\n\n    if(!props.isOpen) {\n        cls.push(classes.close)\n    }\n\n    const links = [\n        {to: '/',label: 'Список'},\n    ]\n\n    if(props.isAuthenticated) {\n        links.push({to: '/quiz-creator',label: 'Создать тест'})\n        links.push({to: '/logout',label: 'Выйти'})\n    } else {\n        links.push({to: '/auth',label: 'Авторизация'})\n    }\n\n    return (\n        <>\n            <nav className={cls.join(' ')}>\n                <ul>\n                    { renderLinks(links) }\n                </ul>\n            </nav>\n            {/*{ this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null }*/}\n            <Backdrop onClick={props.onClose} isOpen={props.isOpen}/>\n        </>\n    )\n};\n\nexport default Drawer;","import React, { useState } from 'react';\nimport classes from './Layout.module.css';\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle';\nimport Drawer from '../../components/Navigation/Drawer/Drawer';\nimport { connect } from 'react-redux';\n\nconst Layout = (props) => {\n    const [state, setState] = useState({menu: false})\n\n    const toggleMenuHandler = () => {\n        setState(state => ({\n            ...state,\n            menu: !state.menu\n        }))\n    }\n\n    const menuCloseHandler= () => {\n        setState(state => ({\n            ...state,\n            menu: false\n        }))\n    }\n\n    return (\n        <div className={classes.Layout}>\n\n            <Drawer\n                isOpen={state.menu}\n                onClose={menuCloseHandler}\n                isAuthenticated={props.isAuthenticated}\n            />\n\n            <MenuToggle\n                onToggle={toggleMenuHandler}\n                isOpen={state.menu}\n            />\n\n            <main>\n                { props.children }\n            </main>\n        </div>\n    );\n};\n\nfunction mapStateToProps (state) {\n    return {\n        isAuthenticated: !!state.auth.token\n    }\n}\n\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\nimport classes from './AnswerItem.module.css';\n\nconst AnswerItem = props => {\n    const cls = [classes.AnswerItem]\n\n    if(props.state) {\n        cls.push(classes[props.state])\n    }\n\n    return (\n        <li\n            className={cls.join(' ')}\n            onClick={() => props.onAnswerClick(props.answer.id)}\n        >\n\n            { props.answer.text }\n        </li>\n    )\n}\n\nexport default AnswerItem;","import React from 'react';\nimport classes from './AnswersList.module.css';\nimport AnswerItem from './AnswerItem/AnswerItem';\n\nconst AnswersList = props => (\n    <ul className={classes.AnswersList}>\n        {props.answers.map((answer, index) => {\n            return (\n                <AnswerItem\n                    key={index}\n                    answer={answer}\n                    onAnswerClick={props.onAnswerClick}\n                    state={props.state ? props.state[answer.id] : null}\n                />\n            )\n        }) }\n    </ul>\n)\n\nexport default AnswersList;","import React from 'react';\nimport classes from './ActiveQuiz.module.css';\nimport AnswersList from './AnswersList/AnswersList';\n\nconst ActiveQuiz = props => {\n    return (\n        <div className={classes.ActiveQuiz}>\n            <p className={classes.Question}>\n                <span>\n                    <strong>{props.answerNumber}. </strong>{props.question}\n                </span>\n\n                <small>{props.answerNumber} из {props.quizLength}</small>\n            </p>\n\n            <AnswersList\n                state={props.state}\n                answers={props.answers}\n                onAnswerClick={props.onAnswerClick}\n            />\n        </div>\n    );\n}\n\nexport default ActiveQuiz;\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = props => {\n    const cls= [\n        classes.Button,\n        classes[props.type]\n    ]\n    return (\n        <button\n            onClick={props.onClick}\n            className={cls.join(' ')}\n            disabled={props.disabled}\n        >\n            {props.children}\n        </button>\n    );\n}\n\nexport default Button;","import React from 'react';\nimport classes from './FinishedQuiz.module.css';\nimport Button from '../UI/Button/Button';\nimport { Link } from 'react-router-dom';\n\nconst FinishedQuiz = props => {\n    const successCount = Object.keys(props.result).reduce((total, key) => {\n        if(props.result[key] === 'success') {\n            total++\n        }\n\n        return total\n    }, 0)\n\n    return (\n        <div className={classes.FinishedQuiz}>\n            {/*font awesome*/}\n            <ul>\n                { props.quiz.map((quizItem, index) => {\n                    const cls = [\n                        'fa',\n                        props.result[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n                        classes[props.result[quizItem.id]]\n                    ]\n\n                    //debugger\n\n                    return (\n                        <li\n                            key={index}\n                        >\n                            <strong>{index + 1}. </strong>\n                            {quizItem.question}\n                            <i className={cls.join(' ')}/>\n                        </li>\n                    )\n\n                }) }\n            </ul>\n\n            <p>Правильно {successCount} из {props.quiz.length}</p>\n\n            <div>\n                <Button onClick={props.onRetry} type='primary'>Повторим?</Button>\n                <Link to='/'>\n                    <Button type='success'>Перейти в список тестов?</Button>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nexport default FinishedQuiz;","import React from 'react';\nimport classes from './Loader.module.css';\n\nconst Loader = props => {\n    return (\n        <div className={classes.center}>\n            <div className={classes.Loader}>\n                <div/>\n                <div/>\n                <div/>\n                <div/>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;\n","import axios from 'axios';\nexport default axios.create({\n    baseURL: 'https://react-quiz-a6112-default-rtdb.europe-west1.firebasedatabase.app/'\n})","import axios from '../../axios/axios-quiz'\nimport {\n    FETCH_QUIZ_SUCCESS,\n    FETCH_QUIZZES_ERROR,\n    FETCH_QUIZZES_START,\n    FETCH_QUIZZES_SUCCESS,\n    FINISH_QUIZ,\n    QUIZ_NEXT_QUESTION,\n    QUIZ_SET_STATE,\n    QUIZ_RETRY\n} from \"./actionTypes\";\n\nexport function fetchQuizzes() {\n    return async dispatch => {\n        dispatch(fetchQuizzesStart())\n\n        try {\n            const response = await axios.get('/quizzes.json')\n\n            const quizzes = []\n\n            Object.keys(response.data).forEach((key, index) => {\n                quizzes.push({\n                    id: key,\n                    name: `Тест №${index + 1}`\n                })\n            })\n            dispatch(fetchQuizzesSuccess(quizzes))\n        } catch (e) {\n            dispatch(fetchQuizzesError())\n        }\n    }\n}\n\nexport function fetchQuizById(quizId) {\n    return async dispatch => {\n        dispatch(fetchQuizzesStart())\n\n        try {\n            const response = await axios.get(`/quizzes/${quizId}.json`)\n            const quiz = response.data\n\n            dispatch(fetchQuizSuccess(quiz))\n        } catch (e) {\n            dispatch(fetchQuizzesError(e))\n        }\n    }\n}\n\nexport function fetchQuizSuccess(quiz) {\n    return {\n        type: FETCH_QUIZ_SUCCESS,\n        quiz\n    }\n}\n\nexport function fetchQuizzesStart() {\n    return {\n        type: FETCH_QUIZZES_START\n    }\n}\n\nexport function fetchQuizzesSuccess (quizzes) {\n    return {\n        type: FETCH_QUIZZES_SUCCESS,\n        quizzes\n    }\n}\n\nexport function fetchQuizzesError(e) {\n    return {\n        type: FETCH_QUIZZES_ERROR,\n        error: e\n    }\n}\n\nexport function quizSetState(answerState, results) {\n    return {\n        type: QUIZ_SET_STATE,\n        answerState, results\n    }\n}\n\nexport function finishQuiz() {\n    return {\n        type: FINISH_QUIZ\n    }\n}\n\nexport function quizNextQuestion(number) {\n    return {\n        type: QUIZ_NEXT_QUESTION,\n        number\n    }\n}\n\nexport function retryQuiz() {\n    return {\n        type: QUIZ_RETRY\n    }\n}\n\nexport function quizAnswerClick(answerId) {\n    return (dispatch, getState) => {\n        const state = getState().quiz\n\n        // debug double click\n        if(state.answerState) {\n            const key = Object.keys(state.answerState)[0]\n            if(state.answerState[key] === 'success') {\n                return\n            }\n        }\n\n        const question = state.quiz[state.activeQuestion]\n        const results = state.results\n\n        if(question.rightAnswerId === answerId) {\n            if(!results[question.id]) {\n                results[question.id] = 'success'\n            }\n\n            dispatch(quizSetState(\n                {[answerId]: 'success'},\n                results\n            ))\n\n            const timeout = window.setTimeout(() => {\n                if(isQuizFinished(state)) {\n                    dispatch(finishQuiz())\n                } else {\n                    dispatch(quizNextQuestion(state.activeQuestion + 1))\n                }\n                window.clearTimeout(timeout)\n            }, 1000)\n        } else {\n            results[question.id] = 'error'\n            dispatch(quizSetState(\n                {[answerId]: 'error'},\n                results\n            ))\n\n        }\n    }\n}\n\nexport function isQuizFinished(state) {\n    return state.activeQuestion + 1 === state.quiz.length\n}","export const FETCH_QUIZZES_START = 'FETCH_QUIZZES_START'\nexport const FETCH_QUIZZES_SUCCESS = 'FETCH_QUIZZES_SUCCESS'\nexport const FETCH_QUIZZES_ERROR = 'FETCH_QUIZZES_ERROR'\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\n\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\n\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\nexport const AUTH_ERROR = 'AUTH_ERROR'","import React, { useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport classes from './Quiz.module.css';\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\nimport Loader from '../../components/UI/Loader/Loader';\nimport { connect } from 'react-redux';\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from '../../store/actions/quiz';\n\nconst Quiz = (props) => {\n    const { id } = useParams()\n\n    useEffect(() => {\n        props.fetchQuizById(id)\n        return () => {\n            props.retryQuiz()\n        };\n    }, [])\n\n    return (\n        <div className={classes.Quiz}>\n            <div className={classes.QuizWrapper}>\n                <h1>Ответьте на все вопросы:</h1>\n\n                {\n                    props.loading || !props.quiz\n                        ? <Loader/>\n                        : props.isFinished\n                            ? <FinishedQuiz\n                                result={props.results}\n                                quiz={props.quiz}\n                                onRetry={props.retryQuiz}\n                            />\n                            : <ActiveQuiz\n                                answers={props.quiz[props.activeQuestion].answers}\n                                question={props.quiz[props.activeQuestion].question}\n                                onAnswerClick={props.quizAnswerClick}\n                                quizLength={props.quiz.length}\n                                answerNumber={props.activeQuestion + 1}\n                                state={props.answerState}\n                            />\n                }\n            </div>\n        </div>\n    );\n};\n\nfunction mapStateToProps (state) {\n    return {\n        results: state.quiz.results,\n        isFinished: state.quiz.isFinished,\n        activeQuestion: state.quiz.activeQuestion,\n        answerState: state.quiz.answerState,\n        quiz: state.quiz.quiz,\n        loading: state.quiz.loading\n    }\n}\n\nfunction mapDispatchToProps (dispatch) {\n    return {\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\n        retryQuiz: () => dispatch(retryQuiz())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\n","import React,{ useEffect } from 'react';\nimport classes from './QuizList.module.css';\nimport { Link } from 'react-router-dom';//NavLink\nimport Loader from '../../components/UI/Loader/Loader';\nimport { connect } from \"react-redux\";\nimport { fetchQuizzes } from '../../store/actions/quiz';\n\nconst QuizList = (props) => {\n    function renderQuizzes() {\n        return props.quizzes.map(quiz => {\n            return (\n                <li\n                    key={quiz.id}\n                >\n                    <Link to={`/quizzes/${quiz.id}`}>\n                        {quiz.name}\n                    </Link>\n                </li>\n            )\n        })\n    }\n\n    useEffect(() => {\n        props.fetchQuizzes()\n    }, [])\n\n    return (\n        <div className={classes.QuizList}>\n            <div>\n                <h1>Список тестов</h1>\n\n                { props.loading && props.quizzes.length !== 0\n                    ? <Loader/>\n                    : <ul>\n                        { renderQuizzes() }\n                    </ul>\n                }\n            </div>\n        </div>\n    );\n};\n\nfunction mapStateToProps(state) {\n    return {\n        quizzes: state.quiz.quizzes,\n        loading: state.quiz.loading\n    }\n}\n\nfunction mapDispatchToProps (dispatch) {\n    return {\n        fetchQuizzes: () => dispatch(fetchQuizzes())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);\n","import React from 'react';\nimport classes from './input.module.css';\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n    return !valid && touched && shouldValidate\n}\n\nconst Input = props => {\n    const inputType = props.type || 'text'\n    const cls = [classes.Input]\n    const htmlFor = `${inputType}-${Math.random()}`\n\n    // if(isInvalid(props)) {\n    //     cls.push(classes.invalid)\n    // }\n\n    return (\n        <div className={cls.join(' ')}>\n            <label htmlFor={htmlFor}>\n                {props.label}\n            </label>\n\n\n            {/*<i className=\"fal fa-lock\"></i>*/}\n\n\n\n            <div>\n                <i className={props.icon}></i>\n                <input\n                    type={inputType}\n                    id={htmlFor}\n                    // key={props.key}\n                    value={props.value}\n                    onChange={props.onChange}\n                />\n                {\n                    isInvalid(props)\n                        ? <div className={classes.alert_warning}>\n                            <span>\n                                {props.errorMessage || 'Неверные значения'}\n                            </span>\n                            &nbsp;\n                            <i className=\"fas fa-exclamation-circle\"/>\n                        </div>\n                        : null\n                }\n            </div>\n\n        </div>\n    );\n};\n\nexport default Input;","import axios from \"axios\";\nimport {AUTH_ERROR, AUTH_LOGOUT, AUTH_SUCCESS} from './actionTypes';\n\nexport function auth(email, password, isLogin) {\n    return async dispatch => {\n        const authData = {\n            email,\n            password,\n            returnSecureToken: true\n        }\n\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDf-9OEcpP32LMHmZMdj2zy-hPJjxlyyTw'\n\n        if (isLogin) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDf-9OEcpP32LMHmZMdj2zy-hPJjxlyyTw'\n        }\n\n        try {\n            const response = await axios.post(url, authData)\n            const data = response.data\n\n            const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1e3)\n\n            localStorage.setItem('token', data.idToken)\n            localStorage.setItem('userID', data.localId)\n            localStorage.setItem('expirationDate', expirationDate)\n\n            dispatch(authSuccess(data.idToken))\n            dispatch(autoLogout(data.expiresIn))\n        } catch (e) {\n            dispatch(authError())\n        }\n\n    }\n}\n\nexport function authError() {\n    return {\n        type: AUTH_ERROR\n    }\n}\n\nexport function logout() {\n    localStorage.removeItem('token')\n    localStorage.removeItem('userID')\n    localStorage.removeItem('expirationDate')\n    return {\n        type: AUTH_LOGOUT\n    }\n}\n\nexport function autoLogout (time) {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, time * 1e3)\n    }\n}\n\nexport function autoLogin() {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        if (!token) {\n            dispatch(logout())\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if(expirationDate <= new Date()) {\n                dispatch(logout())\n            } else {\n                dispatch(authSuccess(token))\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1e3))\n            }\n        }\n    }\n}\n\nexport function authSuccess(token) {\n    return {\n        type: AUTH_SUCCESS,\n        token\n    }\n}","import React, { useState } from 'react';\nimport classes from './Auth.module.css';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport is from 'is_js';\nimport { connect } from 'react-redux';\nimport {auth} from '../../store/actions/auth';\n\n// function validateEmail(email) {\n//     const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n//     return re.test(String(email).toLowerCase());\n// }\n\nconst Auth = props => {\n    const [state, setState] = useState({\n        isFormValid: false,\n        formControls: {\n            email: {\n                value: '',\n                type: 'email',\n                label: 'Email',\n                icon: 'fal fa-user-alt',\n                errorMessage: '@mail.ru, @gmail.com и т.д... ',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    email: true\n                }\n            },\n            password: {\n                value: '',\n                type: 'password',\n                label: 'Пароль',\n                icon: 'fal fa-lock',\n                errorMessage: 'Минимальная длина пароля 6 символов.',\n                valid: false,\n                touched: false,\n                validation: {\n                    password: true,\n                    minLength: 6\n                }}\n        }\n    })\n\n    const loginHandler = () => {\n        props.auth(\n            state.formControls.email.value,\n            state.formControls.password.value,\n            true\n        )\n    }\n\n    const registerHandler = () => {\n        props.auth(\n            state.formControls.email.value,\n            state.formControls.password.value,\n            false\n        )\n    }\n\n    const submitHandler = event => {\n        event.preventDefault()\n    }\n\n    function validateControl(value, validation) {\n        if (!validation) {\n            return true\n        }\n\n        let isValid = true\n        if (validation.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n        if (validation.email) {\n            isValid = is.email(value) && isValid\n        }\n\n        if (validation.minLength) {\n            isValid = value.length >= validation.minLength && isValid\n        }\n        return isValid\n    }\n\n    const onChangeHandler = (event, controlName) => {\n        const formControls = { ...state.formControls }\n        const control = { ...formControls[controlName] }\n\n        control.value = event.target.value\n        control.touched = true\n        control.valid = validateControl(control.value, control.validation)\n\n        formControls[controlName] = control\n\n        let isFormValid = true\n\n        Object.keys(formControls).forEach(name => {\n            isFormValid = formControls[name].valid && isFormValid\n        })\n\n        setState(state => ({\n            ...state,\n            isFormValid,\n            formControls\n        }))\n    }\n\n    function renderInputs() {\n        return Object.keys(state.formControls).map((controlName,index) => {\n            const control = state.formControls[controlName]\n\n            // if (props.authError) {\n            //     control.value = ''\n            // }\n\n            return (\n                <Input\n                    key={controlName + index}\n                    type={control.type}\n                    value={control.value}\n                    valid={control.valid}\n                    touched={control.touched}\n                    label={control.label}\n                    icon={control.icon}\n                    shouldValidate={!!control.validation}\n                    errorMessage={control.errorMessage}\n                    onChange={event => onChangeHandler(event, controlName)}\n                />\n            )\n        })\n    }\n\n    return (\n        <div className={classes.Auth}>\n            <div>\n\n                <h1>Авторизация</h1>\n\n                <form onSubmit={submitHandler} className={classes.AuthForm}>\n                    {\n                        props.authError\n                            ? <span><i className='far fa-exclamation-triangle'/>Ошибка. Попробуйте снова.</span>\n                            : null\n                    }\n\n                    { renderInputs() }\n\n                    <Button\n                        type='success'\n                        onClick={loginHandler}\n                        disabled={!state.isFormValid}\n                    >\n                        Войти\n                    </Button>\n                    <Button\n                        type='primary'\n                        onClick={registerHandler}\n                        disabled={!state.isFormValid}\n                    >\n                        Зарегистрироваться\n                    </Button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nfunction mapStateToProps(state) {\n    return {\n        authError: state.auth.authError\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React from 'react';\nimport classes from './Select.module.css';\n\nconst Select = props => {\n    const htmlFor = `${props.label}-${Math.random()}`\n\n    return (\n        <div className={classes.Select}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <select\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            >\n                { props.options.map((option, index) => {\n                    return (\n                        <option\n                            value={option.value}\n                            key={option.value + index}\n                        >\n                            {option.text}\n                        </option>\n                    )\n                }) }\n            </select>\n        </div>\n    );\n};\n\nexport default Select;","export function createControl(config, validation) {\n    return {\n        ...config,\n        validation,\n        valid: !validation,\n        touched: false,\n        value: ''\n    }\n}\n\nexport function validate(value, validation = null) {\n    if(!validation) {\n        return true\n    }\n\n    let isValid = true\n\n    if(validation.required) {\n        isValid = value.trim() !== '' && isValid\n    }\n\n    return isValid\n}\n\nexport function validateForm(formControls) {\n    let isFormValid = true\n\n    for (let control in formControls) {\n        if(formControls.hasOwnProperty(control)){\n            isFormValid = formControls[control].valid && isFormValid\n        }\n    }\n\n    return isFormValid\n}","import React, { useState } from 'react';\nimport classes from './QuizCreator.module.css';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport Select from '../../components/UI/Select/Select';\nimport { createControl, validate, validateForm } from '../../form/formFramework';\nimport { connect } from 'react-redux';\nimport {createQuizQuestion, finishCreateQuiz} from '../../store/actions/create';\n\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Вариант ${number}`,\n        errorMessage: 'Значение не может быть пустым',\n        id: number\n    }, {required: true})\n}\n\nfunction createFormControls() {\n    return {\n        question: createControl({\n            label: 'Введите вопрос',\n            errorMessage: 'Вопрос не может быть пустым'\n        }, {required: true}),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4),\n    }\n}\n\nconst QuizCreator = (props) => {\n    const [state, setState] = useState({\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n    })\n\n    const submitHandler = event => {\n        event.preventDefault()\n    }\n\n    const addQuestionHandler = event => {\n        event.preventDefault()\n\n        const {question, option1, option2, option3, option4} = state.formControls\n\n        const questionItem = {\n            question: question.value,\n            id: props.quiz.length + 1,\n            rightAnswerId: state.rightAnswerId,\n            answers: [\n                {text: option1.value, id: option1.id},\n                {text: option2.value, id: option2.id},\n                {text: option3.value, id: option3.id},\n                {text: option4.value, id: option4.id}\n            ]\n        }\n\n        props.createQuizQuestion(questionItem)\n\n        setState(state => ({\n            ...state,\n            isFormValid: false,\n            rightAnswerId: 1,\n            formControls: createFormControls()\n\n        }))\n    }\n\n    const createQuizHandler = event => {\n        event.preventDefault()\n\n        setState(state => ({\n            //...state,\n            isFormValid: false,\n            rightAnswerId: 1,\n            formControls: createFormControls()\n        }))\n        props.finishCreateQuiz()\n    }\n    const changeHandler = (value, controlName) => {\n        const formControls = { ...state.formControls }\n        const control = { ...formControls[controlName] }\n\n        control.touched = true\n        control.value = value\n        control.valid = validate(control.value, control.validation)\n\n        formControls[controlName] = control\n\n        setState(state => ({\n            ...state,\n            formControls,\n            isFormValid: validateForm(formControls)\n        }))\n    }\n\n    function renderControls() {\n        return Object.keys(state.formControls).map((controlName, index) => {\n            const control = state.formControls[controlName]\n\n            return (\n                <>\n                    <Input\n                        index={controlName + index}\n                        // key={index}\n                        label={control.label}\n                        value={control.value}\n                        valid={control.valid}\n                        shouldValidate={!!control.validation}\n                        touched={control.touched}\n                        errorMessage={control.errorMessage}\n                        onChange={event => changeHandler(event.target.value, controlName)}\n                    />\n                </>\n            )\n        })\n    }\n\n    const selectChangeHandler = event => {\n        setState(state => ({\n            ...state,\n            rightAnswerId: +event.target.value\n        }))\n    }\n\n    const select = <Select\n        label='Выберите правильный ответ'\n        value={state.rightAnswerId}\n        onChange={selectChangeHandler}\n        options={[\n            {text: 1, value: 1},\n            {text: 2, value: 2},\n            {text: 3, value: 3},\n            {text: 4, value: 4}\n        ]}\n    />\n\n    return (\n        <div className={classes.QuizCreator}>\n            <div>\n                <h1>Создание теста</h1>\n\n                <form onSubmit={submitHandler}>\n\n                    { renderControls() }\n\n                    { select }\n\n                    <Button\n                        type='primary'\n                        onClick={addQuestionHandler}\n                        disabled={!state.isFormValid}\n                    >\n                        Добавить вопрос\n                    </Button>\n                    <Button\n                        type='success'\n                        onClick={createQuizHandler}\n                        disabled={props.quiz.length === 0}\n                    >\n                        Создать тест\n                    </Button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nfunction mapStateToProps(state) {\n    return {\n        quiz: state.create.quiz\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        createQuizQuestion: item => dispatch(createQuizQuestion(item)),\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator);\n","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from './actionTypes';\nimport axios from '../../axios/axios-quiz';\n\nexport function createQuizQuestion(item) {\n    return {\n        type: CREATE_QUIZ_QUESTION,\n        item\n    }\n}\n\nexport function resetQuizCreation() {\n    return {\n        type: RESET_QUIZ_CREATION\n    }\n}\n\nexport function finishCreateQuiz() {\n    return async (dispatch, getState) => {\n        await axios.post('/quizzes.json', getState().create.quiz)\n        dispatch(resetQuizCreation())\n    }\n}","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {Routes, Route, Navigate } from 'react-router-dom';\nimport { logout } from '../../store/actions/auth';\n\nfunction Logout(props) {\n    useEffect(() => {\n        props.logout()\n    })\n\n    return (\n        <Routes>\n            <Route path=\"*\" element={<Navigate replace to=\"/auth\" />} />\n        </Routes>\n    )\n}\n\nfunction mapDispatchToProps (dispatch) {\n    return {\n        logout: () => dispatch(logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { useEffect } from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport Quiz from \"./containers/Quiz/Quiz\";\nimport QuizList from \"./containers/QuizList/QuizList\";\nimport Auth from './containers/Auth/Auth';\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\nimport { connect } from 'react-redux';\nimport Logout from './components/Logout/Logout';\nimport { autoLogin } from './store/actions/auth';\n\nfunction App(props) {\n    useEffect(() => {\n        props.autoLogin()\n    })\n\n    let routes = (\n        <Routes>\n            <Route path='/auth' element={<Auth />} />\n            <Route path='/quizzes/:id' element={<Quiz />} />\n            <Route path='/' element={<QuizList />} />\n            <Route path='*' element={<Navigate replace to=\"/\" />} />\n        </Routes>\n    )\n\n    if(props.isAuthenticated) {\n        routes = (\n            <Routes>\n                <Route path='/quiz-creator' element={<QuizCreator />} />\n                <Route path='/quizzes/:id' element={<Quiz />} />\n                <Route path='/logout/*' element={<Logout />} />\n                <Route path='/' element={<QuizList />} />\n                <Route path='*' element={<Navigate replace to=\"/\" />} />\n            </Routes>\n        )\n    }\n\n    return (\n        <Layout>\n            { routes }\n        </Layout>\n    );\n}\n\nfunction mapStateToProps (state) {\n    return {\n        isAuthenticated: !!state.auth.token\n    }\n}\n\nfunction mapDispatchToProps (dispatch) {\n    return {\n        autoLogin: () => dispatch(autoLogin())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    FETCH_QUIZ_SUCCESS,\n    FETCH_QUIZZES_ERROR,\n    FETCH_QUIZZES_START,\n    FETCH_QUIZZES_SUCCESS,\n    FINISH_QUIZ,\n    QUIZ_NEXT_QUESTION,\n    QUIZ_SET_STATE,\n    QUIZ_RETRY\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n    quizzes: [],\n    loading: false,\n    error: null,\n\n    results: {}, //{ [id]: 'success' or 'error' }\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null, // { [id]: 'success' or 'error' }\n    quiz: null\n}\n\nexport default function quizReducer(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_QUIZZES_START:\n            return {\n                ...state,\n                loading: true\n            }\n        case FETCH_QUIZZES_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                quizzes: action.quizzes\n            }\n        case FETCH_QUIZZES_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.error\n            }\n        case FETCH_QUIZ_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                quiz: action.quiz\n            }\n        case QUIZ_SET_STATE:\n            return {\n                ...state,\n                answerState: action.answerState,\n                results: action.results\n            }\n        case FINISH_QUIZ:\n            return {\n                ...state,\n                isFinished: true\n            }\n        case QUIZ_NEXT_QUESTION:\n            return {\n                ...state,\n                activeQuestion: action.number,\n                answerState: null\n            }\n        case QUIZ_RETRY:\n            return {\n                ...state,\n                activeQuestion: 0,\n                answerState: null,\n                isFinished: false,\n                results: {}\n            }\n        default:\n            return state\n    }\n}","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from '../actions/actionTypes';\n\nconst initialState = {\n    quiz: []\n}\n\nexport default function createReducer(state = initialState, action) {\n    switch (action.type) {\n        case CREATE_QUIZ_QUESTION:\n            return {\n                ...state,\n                quiz: [...state.quiz, action.item]\n            }\n        case RESET_QUIZ_CREATION:\n            return {\n                ...state,\n                quiz: []\n            }\n        default:\n            return state\n    }\n}","import {AUTH_ERROR, AUTH_LOGOUT, AUTH_SUCCESS} from '../actions/actionTypes';\n\nconst initialState = {\n    token: null,\n    authError: false\n}\n\nexport default function authReducer(state = initialState, action) {\n    switch (action.type) {\n        case AUTH_SUCCESS:\n            return {\n                ...state,\n                token: action.token,\n                authError: false\n            }\n        case AUTH_LOGOUT:\n            return {\n                ...state,\n                token: null,\n                authError: false\n            }\n        case AUTH_ERROR:\n            return {\n                ...state,\n                authError: true\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport quizReducer from './quiz';\nimport createReducer from './create';\nimport authReducer from './auth';\n\nexport default combineReducers({\n    quiz: quizReducer,\n    create: createReducer,\n    auth: authReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        }) : compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}